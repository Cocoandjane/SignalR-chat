// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatSignalR.Migrations
{
    [DbContext(typeof(ChatContextDb))]
    partial class ChatContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ChatSignalR.Models.Message", b =>
                {
                    b.Property<int>("message_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("message")
                        .HasColumnType("longtext");

                    b.Property<int>("room_user_id")
                        .HasColumnType("int");

                    b.HasKey("message_id");

                    b.HasIndex("room_user_id");

                    b.ToTable("message", (string)null);
                });

            modelBuilder.Entity("ChatSignalR.Models.Room", b =>
                {
                    b.Property<int>("room_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("latest_message")
                        .HasColumnType("longtext");

                    b.Property<string>("room_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("room_id");

                    b.ToTable("room", (string)null);
                });

            modelBuilder.Entity("ChatSignalR.Models.RoomUser", b =>
                {
                    b.Property<int>("room_user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("room_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("room_user_id");

                    b.HasIndex("room_id");

                    b.HasIndex("user_id");

                    b.ToTable("room_user", (string)null);
                });

            modelBuilder.Entity("ChatSignalR.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("ChatSignalR.Models.Message", b =>
                {
                    b.HasOne("ChatSignalR.Models.RoomUser", "roomUsers")
                        .WithMany("messages")
                        .HasForeignKey("room_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("roomUsers");
                });

            modelBuilder.Entity("ChatSignalR.Models.RoomUser", b =>
                {
                    b.HasOne("ChatSignalR.Models.Room", "rooms")
                        .WithMany("roomUsers")
                        .HasForeignKey("room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatSignalR.Models.User", "users")
                        .WithMany("roomUsers")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rooms");

                    b.Navigation("users");
                });

            modelBuilder.Entity("ChatSignalR.Models.Room", b =>
                {
                    b.Navigation("roomUsers");
                });

            modelBuilder.Entity("ChatSignalR.Models.RoomUser", b =>
                {
                    b.Navigation("messages");
                });

            modelBuilder.Entity("ChatSignalR.Models.User", b =>
                {
                    b.Navigation("roomUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
